name: Build Wheels

on: [workflow_call, workflow_dispatch, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ngspice development libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y ngspice libngspice0-dev

      - name: Install cross-compilation tools for aarch64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install maturin
        run: pip install maturin

      - name: Configure cross-compilation linker
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          cat >> .cargo/config.toml << 'EOF'
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build wheels
        run: |
          maturin build --release --target ${{ matrix.target }} --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist/*.whl

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ngspice
        run: |
          brew install ngspice

      - name: Set ngspice paths
        run: |
          echo "CPATH=$(brew --prefix ngspice)/include:$CPATH" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$(brew --prefix ngspice)/lib:$LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels
        run: |
          maturin build --release --target ${{ matrix.target }} --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist/*.whl

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install LLVM (for clang/libclang)
        run: |
          choco install llvm

      - name: Download and setup ngspice
        shell: powershell
        run: |
          # Download ngspice
          $ngspiceUrl = "https://sourceforge.net/projects/ngspice/files/ng-spice-rework/43/ngspice-43_dll_64.zip/download"
          Invoke-WebRequest -Uri $ngspiceUrl -OutFile ngspice.zip
          Expand-Archive -Path ngspice.zip -DestinationPath C:\ngspice

          # Set environment variables
          echo "LIBCLANG_PATH=C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "NGSPICE_INCLUDE=C:\ngspice\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "NGSPICE_LIB=C:\ngspice\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels
        run: |
          maturin build --release --target ${{ matrix.target }} --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ngspice development libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y ngspice libngspice0-dev

      - name: Install maturin
        run: pip install maturin

      - name: Build sdist
        run: maturin sdist --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
